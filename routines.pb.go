// Code generated by protoc-gen-go.
// source: routines.proto
// DO NOT EDIT!

/*
Package routines is a generated protocol buffer package.

It is generated from these files:
	routines.proto

It has these top-level messages:
	ScrapTrelloResetRequest
	ScrapTrelloResetReply
	GetRoutinesRequest
	GetRoutinesReply
	Days
	Items
	Item
	Bool
*/
package routines

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/TuneLab/go-truss/deftree/googlethirdparty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ScrapTrelloResetRequest struct {
}

func (m *ScrapTrelloResetRequest) Reset()                    { *m = ScrapTrelloResetRequest{} }
func (m *ScrapTrelloResetRequest) String() string            { return proto.CompactTextString(m) }
func (*ScrapTrelloResetRequest) ProtoMessage()               {}
func (*ScrapTrelloResetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ScrapTrelloResetReply struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *ScrapTrelloResetReply) Reset()                    { *m = ScrapTrelloResetReply{} }
func (m *ScrapTrelloResetReply) String() string            { return proto.CompactTextString(m) }
func (*ScrapTrelloResetReply) ProtoMessage()               {}
func (*ScrapTrelloResetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ScrapTrelloResetReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type GetRoutinesRequest struct {
	DateStart string `protobuf:"bytes,1,opt,name=date_start,json=dateStart" json:"date_start,omitempty"`
	DateEnd   string `protobuf:"bytes,2,opt,name=date_end,json=dateEnd" json:"date_end,omitempty"`
}

func (m *GetRoutinesRequest) Reset()                    { *m = GetRoutinesRequest{} }
func (m *GetRoutinesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRoutinesRequest) ProtoMessage()               {}
func (*GetRoutinesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetRoutinesRequest) GetDateStart() string {
	if m != nil {
		return m.DateStart
	}
	return ""
}

func (m *GetRoutinesRequest) GetDateEnd() string {
	if m != nil {
		return m.DateEnd
	}
	return ""
}

type GetRoutinesReply struct {
	// CL NAME  data
	Routines map[string]*Days `protobuf:"bytes,1,rep,name=routines" json:"routines,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Err      string           `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *GetRoutinesReply) Reset()                    { *m = GetRoutinesReply{} }
func (m *GetRoutinesReply) String() string            { return proto.CompactTextString(m) }
func (*GetRoutinesReply) ProtoMessage()               {}
func (*GetRoutinesReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetRoutinesReply) GetRoutines() map[string]*Days {
	if m != nil {
		return m.Routines
	}
	return nil
}

func (m *GetRoutinesReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type Days struct {
	Day   string `protobuf:"bytes,1,opt,name=day" json:"day,omitempty"`
	Items *Items `protobuf:"bytes,2,opt,name=items" json:"items,omitempty"`
}

func (m *Days) Reset()                    { *m = Days{} }
func (m *Days) String() string            { return proto.CompactTextString(m) }
func (*Days) ProtoMessage()               {}
func (*Days) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Days) GetDay() string {
	if m != nil {
		return m.Day
	}
	return ""
}

func (m *Days) GetItems() *Items {
	if m != nil {
		return m.Items
	}
	return nil
}

type Items struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Item *Item  `protobuf:"bytes,2,opt,name=item" json:"item,omitempty"`
}

func (m *Items) Reset()                    { *m = Items{} }
func (m *Items) String() string            { return proto.CompactTextString(m) }
func (*Items) ProtoMessage()               {}
func (*Items) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Items) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Items) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

type Item struct {
	Checked     *Bool  `protobuf:"bytes,1,opt,name=checked" json:"checked,omitempty"`
	LastUpdated string `protobuf:"bytes,2,opt,name=last_updated,json=lastUpdated" json:"last_updated,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Item) GetChecked() *Bool {
	if m != nil {
		return m.Checked
	}
	return nil
}

func (m *Item) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

type Bool struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *Bool) Reset()                    { *m = Bool{} }
func (m *Bool) String() string            { return proto.CompactTextString(m) }
func (*Bool) ProtoMessage()               {}
func (*Bool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Bool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func init() {
	proto.RegisterType((*ScrapTrelloResetRequest)(nil), "routines.ScrapTrelloResetRequest")
	proto.RegisterType((*ScrapTrelloResetReply)(nil), "routines.ScrapTrelloResetReply")
	proto.RegisterType((*GetRoutinesRequest)(nil), "routines.GetRoutinesRequest")
	proto.RegisterType((*GetRoutinesReply)(nil), "routines.GetRoutinesReply")
	proto.RegisterType((*Days)(nil), "routines.Days")
	proto.RegisterType((*Items)(nil), "routines.Items")
	proto.RegisterType((*Item)(nil), "routines.Item")
	proto.RegisterType((*Bool)(nil), "routines.Bool")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Routines service

type RoutinesClient interface {
	ScrapTrelloReset(ctx context.Context, in *ScrapTrelloResetRequest, opts ...grpc.CallOption) (*ScrapTrelloResetReply, error)
	GetRoutines(ctx context.Context, in *GetRoutinesRequest, opts ...grpc.CallOption) (*GetRoutinesReply, error)
}

type routinesClient struct {
	cc *grpc.ClientConn
}

func NewRoutinesClient(cc *grpc.ClientConn) RoutinesClient {
	return &routinesClient{cc}
}

func (c *routinesClient) ScrapTrelloReset(ctx context.Context, in *ScrapTrelloResetRequest, opts ...grpc.CallOption) (*ScrapTrelloResetReply, error) {
	out := new(ScrapTrelloResetReply)
	err := grpc.Invoke(ctx, "/routines.Routines/ScrapTrelloReset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routinesClient) GetRoutines(ctx context.Context, in *GetRoutinesRequest, opts ...grpc.CallOption) (*GetRoutinesReply, error) {
	out := new(GetRoutinesReply)
	err := grpc.Invoke(ctx, "/routines.Routines/GetRoutines", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Routines service

type RoutinesServer interface {
	ScrapTrelloReset(context.Context, *ScrapTrelloResetRequest) (*ScrapTrelloResetReply, error)
	GetRoutines(context.Context, *GetRoutinesRequest) (*GetRoutinesReply, error)
}

func RegisterRoutinesServer(s *grpc.Server, srv RoutinesServer) {
	s.RegisterService(&_Routines_serviceDesc, srv)
}

func _Routines_ScrapTrelloReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapTrelloResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutinesServer).ScrapTrelloReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routines.Routines/ScrapTrelloReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutinesServer).ScrapTrelloReset(ctx, req.(*ScrapTrelloResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Routines_GetRoutines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoutinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutinesServer).GetRoutines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routines.Routines/GetRoutines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutinesServer).GetRoutines(ctx, req.(*GetRoutinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Routines_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routines.Routines",
	HandlerType: (*RoutinesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScrapTrelloReset",
			Handler:    _Routines_ScrapTrelloReset_Handler,
		},
		{
			MethodName: "GetRoutines",
			Handler:    _Routines_GetRoutines_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "routines.proto",
}

func init() { proto.RegisterFile("routines.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 479 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x53, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0x96, 0x53, 0xe7, 0xd7, 0x64, 0xfc, 0x6b, 0x1b, 0x46, 0x54, 0xa4, 0x51, 0x11, 0xed, 0x0a,
	0xa4, 0x70, 0x20, 0x96, 0xc2, 0x05, 0x71, 0xa9, 0x84, 0x5a, 0x10, 0x02, 0x71, 0x70, 0xca, 0x85,
	0x4b, 0xb5, 0x89, 0x87, 0xc4, 0x8a, 0xe3, 0x35, 0xeb, 0x31, 0x92, 0xaf, 0xbc, 0x02, 0x0f, 0xc3,
	0x83, 0x20, 0xde, 0x80, 0x07, 0x41, 0xbb, 0xf1, 0x3a, 0xa4, 0x55, 0xb8, 0x79, 0xbe, 0xef, 0x9b,
	0x6f, 0xfe, 0xec, 0x18, 0x0e, 0xb5, 0x2a, 0x39, 0xc9, 0xa8, 0x18, 0xe5, 0x5a, 0xb1, 0xc2, 0x8e,
	0x8b, 0x07, 0xaf, 0xe7, 0x09, 0x2f, 0xca, 0xe9, 0x68, 0xa6, 0x56, 0xe1, 0x75, 0x99, 0xd1, 0x7b,
	0x39, 0x0d, 0xe7, 0xea, 0x19, 0xeb, 0xb2, 0x28, 0xc2, 0x98, 0x3e, 0xb3, 0x26, 0x0a, 0xe7, 0x4a,
	0xcd, 0x53, 0xe2, 0x45, 0xa2, 0xe3, 0x5c, 0x6a, 0xae, 0x42, 0x99, 0x65, 0x8a, 0x25, 0x27, 0x2a,
	0xab, 0x1d, 0xc5, 0x09, 0x3c, 0x98, 0xcc, 0xb4, 0xcc, 0xaf, 0x35, 0xa5, 0xa9, 0x8a, 0xa8, 0x20,
	0x8e, 0xe8, 0x4b, 0x49, 0x05, 0x8b, 0xa7, 0x70, 0x7c, 0x97, 0xca, 0xd3, 0x0a, 0x7b, 0xb0, 0x47,
	0x5a, 0xf7, 0xbd, 0x33, 0x6f, 0xd8, 0x8d, 0xcc, 0xa7, 0xf8, 0x00, 0xf8, 0x86, 0x38, 0xaa, 0x9b,
	0xab, 0x0d, 0xf0, 0x21, 0x40, 0x2c, 0x99, 0x6e, 0x0a, 0x96, 0x9a, 0x6b, 0x79, 0xd7, 0x20, 0x13,
	0x03, 0xe0, 0x09, 0x74, 0x2c, 0x4d, 0x59, 0xdc, 0x6f, 0x59, 0x72, 0xdf, 0xc4, 0x57, 0x59, 0x2c,
	0x7e, 0x78, 0xd0, 0xdb, 0x32, 0x34, 0x65, 0x2f, 0xa1, 0x19, 0xbf, 0xef, 0x9d, 0xed, 0x0d, 0x83,
	0xf1, 0x70, 0xd4, 0xec, 0xe7, 0xb6, 0x7a, 0xe4, 0xa2, 0xab, 0x8c, 0x75, 0x15, 0x35, 0x99, 0xae,
	0xf9, 0x56, 0xd3, 0xfc, 0xe0, 0x1d, 0x1c, 0x6c, 0x89, 0x8d, 0x64, 0x49, 0x95, 0x9b, 0x6f, 0x49,
	0x15, 0x3e, 0x86, 0xf6, 0x57, 0x99, 0x96, 0x64, 0xd3, 0x82, 0xf1, 0xe1, 0xa6, 0xee, 0xa5, 0xac,
	0x8a, 0x68, 0x4d, 0xbe, 0x6c, 0xbd, 0xf0, 0xc4, 0x05, 0xf8, 0x06, 0x32, 0x1e, 0xb1, 0x6c, 0x3c,
	0x62, 0x59, 0xe1, 0x13, 0x68, 0x27, 0x4c, 0xab, 0xa2, 0xf6, 0x38, 0xda, 0x78, 0xbc, 0x35, 0x70,
	0xb4, 0x66, 0xc5, 0x05, 0xb4, 0x6d, 0x8c, 0x08, 0x7e, 0x26, 0x57, 0x54, 0x5b, 0xd8, 0x6f, 0x14,
	0xe0, 0x1b, 0xd5, 0xdd, 0x36, 0x4c, 0x4a, 0x64, 0x39, 0x31, 0x01, 0xdf, 0x44, 0x38, 0x84, 0xfd,
	0xd9, 0x82, 0x66, 0x4b, 0x8a, 0xad, 0xc5, 0x96, 0xfc, 0x95, 0x52, 0x69, 0xe4, 0x68, 0x3c, 0x87,
	0xff, 0x53, 0x59, 0xf0, 0x4d, 0x99, 0x9b, 0xfd, 0xbb, 0xc7, 0x08, 0x0c, 0xf6, 0x71, 0x0d, 0x89,
	0x53, 0xf0, 0x4d, 0x0e, 0xde, 0x77, 0x8b, 0x30, 0x96, 0x9d, 0x7a, 0xf0, 0xf1, 0x2f, 0x0f, 0x3a,
	0x6e, 0x85, 0xb8, 0x82, 0xde, 0xed, 0xb3, 0xc1, 0xf3, 0x4d, 0xe9, 0x1d, 0xd7, 0x36, 0x78, 0xf4,
	0x2f, 0x49, 0x9e, 0x56, 0xe2, 0xf8, 0xdb, 0xcf, 0xdf, 0xdf, 0x5b, 0x47, 0x78, 0x10, 0xb2, 0xa5,
	0x42, 0x25, 0x4b, 0x5e, 0xe0, 0x27, 0x08, 0xfe, 0x7a, 0x7b, 0x3c, 0xdd, 0x71, 0x12, 0xeb, 0x22,
	0x83, 0xdd, 0x07, 0x23, 0xee, 0x59, 0xff, 0x00, 0xbb, 0xa1, 0xd3, 0x4c, 0xff, 0xb3, 0xff, 0xc8,
	0xf3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xef, 0x8d, 0xdd, 0x87, 0x03, 0x00, 0x00,
}
